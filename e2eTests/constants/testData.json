{
	"login": {
		"validUserName": "test_user",
		"validPassword": "password1",
		"invalidUserName": "invalid",
		"invalidPassword": "invalid",
		"validCAPSUserName":"TEST_USER",
		"validCAPSEmail" : "TEST@TEST.COM"
	},
	"signup": {
		"validUserName": "test",
		"validUserNameWithNumber": "test007",
		"validUserNameWithChar": "test_test",
		"validUserNameWithDash":"test-test",
		"validUserNameWithDot":"test.test",
		"validUserNameWithAt":"test@test",
		"validUserNameWithSpace":"test space",
		"validUserNameWith$":"test$",
		"validUserNameWiths":"Username*S",
		"twoLetterUserName" : "te",
		"maxLetterUserName" : "abcdefghijklmonpqrstuvwxyzabcdefghijklmnopkrest",
		"allCharUserName" : "abAB109-_'.@''",
		"validPassword": "password1",
		"validPasswordEightChar" :"Quality2",
		"validPasswordTwentyChar" :"Quality2Quality2Qual",
		"validPasswordSpecialChar" :"Quality@-_'",
		"validPasswordUC" :"QUALITY2",
		"invalidPassword":"password",
		"inavalidPasswordWithSpecialChar":"Qua@#$%",
		"validEmail": "test@test.com",
		"validEmailWithChar" : "abc_def@test.com",
		"validEmailWithDot" : "abc.def@test.com",
		"validEmailWithMultiChar":"testemail'01-_.''mydomain@test.com",
		"validEmailWithdash":"testmail-test@test.com",
		"validEmailWith$":"testmail$@test.com",
		"validLongEmail":"unnikirandunkara@test.com",
		"invalidEmailLength4" : "a@b.c",
		"invalidEmailLength40" : "abcdefghijk_nairbcdefghqwertyuioop@test.com"
			

	},
	
	"forgotpassword":{
		
		
	},
	
    "kintoblock":{
    	"validKintoBlockName" : "test name",
    	"validKintoBlockNameWithChar" : "test name#",
    	"validKBNameWithChar" : "test_name",
    	"validKBNameWithDollar" : "test$name",
    	"validKBNameWithStar" : "test*name",
    	"validKBDescription"  : "This microservice is for OAuth",
    	"validKBDescriptionWithChar"  : "This microservice is for #$%@!^&*~",
    	"invalidKBDescription": "The microservice architecture is not a silver bullet. It has several drawbacks.Moreover, when using this architecture there are numerous issues that you must address. The microservicearchitecture pattern language is a collection of patterns for applying the microservice architecture",
    	"validUpdatedKBName" : "test name 2",
    	"validUpdatedKBDescription"  : "test description",
    	"validRepoName"       : "repo",
    	"validRepoNameWithChar":"repo/master",
    	"validEnvironmentKey" : "name",
    	"validEnvironmentKeyWithCaps" : "Name",
    	"validEnvironmentKeyWithSpecialChars" : "Name*#$",
    	"updatedEnvironmentKey" : "updatedname",
    	"validEnvironmentValue" : "value",
    	"validEnvironmentValueWithCaps" : "Value",
    	"validEnvironmentValueWithSpecialChars" : "Value#*$",
    	"updatedEnvironmentValue":"updatedvalue",
    	"validCustomKey" : "customkey",
    	"validCustomKeyWithSpecialChars" : "Name*#$",
    	"validCustomValue" : "customvalue",
    	"updatedCustomKey" : "updatedCustKey",
    	"updatedCustomValue" : "updatedCustValue",
    	"validCustomValueWithSpecialChars" : "Value*#$"
    
		
	},
	
	"kintoapp":{
		
    	"validKintoAppName" : "test name",
    	"validKANamewithChars": "test#name",
    	"validKANamewithDot" :"test.name",
    	"validKintoAppDescription"  : "This Application is for OAuth",
    	"validKintoAppDescriptionWithChars"  : "This Application is for Inventory Management #$&*@Auth",
   	"invalidKintoAppDescription": "The microservice architecture is not a silver bullet. It has several drawbacks.Moreover, when using this architecture there are numerous issues that you must address. The microservicearchitecture pattern language is a collection of patterns for applying the microservice architecture",
    	"validUpdatedKintoAppName" : "test name 2",
    	"validKANameWithDollar" : "testKA$",
    	"validNotes" : "Deploying my first version 1.2.3"
    		
    	
  
		
	}
	
	
}